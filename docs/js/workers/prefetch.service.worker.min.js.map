{"version":3,"sources":["../../../src/js/prefetch/prefetch.service.worker.js"],"names":["f","define","amd","PrefetchServiceWorkerEvent","prefetched","controllers","sendMessage","type","assets","data","self","postMessage","addEventListener","event","id","controller","abort","length","Promise","fetch","options","mode","AbortController","signal","promises","onProgress","total","loaded","promise","then","all","PromiseAllProgress","map","url","resolve","reject","_","error","Prefetch","progress","catch","console","log"],"mappings":";;;;;CACA,SAAAA,GAAA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAAD,GAAAA,IAAA,EAAA,WAAA,aAAA,MAAMG,EACK,WADLA,EAEK,WAGLC,EAAa,GACbC,EAAc,GAEpB,SAASC,EAAYC,EAAMC,EAAQC,GAClCC,KAAKC,YAAY,CAChBJ,KAAMA,EACNC,OAAQA,EACRC,KAAMA,IAiDRC,KAAKE,iBAAiB,WA7CtB,SAAmBC,GAClB,MAAMC,EAAKD,EAAMJ,KAAKK,GAChBN,EAASK,EAAMJ,KAAKD,OAEtB,IAACM,EACJ,OAED,GAAIA,IAAON,EAAQ,CAClB,MAAMO,EAAaV,EAAYS,GAK/B,YAJIC,GAEHA,EAAWC,SAIb,IAAKR,EAAOS,OACX,OAED,GAAuB,oBAAZC,QACV,OAED,GAAqB,mBAAVC,MACV,OAED,MAAMC,EAAU,CACfC,KAAM,QAEHX,GAAAA,KAAKY,gBAAiB,CACzB,MAAMP,EAAa,IAAIO,gBACvBF,EAAQG,OAASR,EAAWQ,OAC5BlB,EAAYS,GAAMC,EAGnB,OA+BD,SAA4BS,EAAUC,GACrC,MAAMC,EAAQF,EAASP,OACnBU,IAAAA,EAAS,EACa,mBAAfF,GACVA,EAAW,CAAEE,OAAAA,EAAQD,MAAAA,IAEtB,IAAK,MAAME,KAAWJ,EACrBI,EAAQC,MAAK,KACZF,IAC0B,mBAAfF,GACVA,EAAW,CAAEE,OAAAA,EAAQD,MAAAA,OAIxB,OAAOR,QAAQY,IAAIN,GA7CZO,CAAmBvB,EAAOwB,KAAIC,GActC,SAAkBA,EAAKb,GACtB,OAAO,IAAIF,SAAQ,CAACgB,EAASC,KACX/B,EAAW6B,GAE3BC,EAAQD,GAERd,MAAMc,EAAKb,GAASS,MAAK,SAASO,GACjChC,EAAW6B,IAAO,EAClBC,EAAQD,MACN,SAASI,GAEXF,EAAOE,SAzBkCC,CAASL,EAAKb,MAAW,SAASmB,GAE7EjC,EAAYH,EAAqCK,EAAQ+B,MACvDV,MAAK,SAASO,UACT/B,EAAYS,GAEnBR,EAAYH,EAAqCK,MAC/CgC,OAAM,SAASH,GACjBI,QAAQC,IAAI,wCAAyCL","file":"docs/js/workers/prefetch.service.worker.min.js","sourcesContent":["\nconst PrefetchServiceWorkerEvent = {\n\tProgress: 'progress',\n\tComplete: 'complete',\n};\n\nconst prefetched = {};\nconst controllers = {};\n\nfunction sendMessage(type, assets, data) {\n\tself.postMessage({\n\t\ttype: type,\n\t\tassets: assets,\n\t\tdata: data\n\t});\n}\n\nfunction onMessage(event) {\n\tconst id = event.data.id;\n\tconst assets = event.data.assets;\n\t// console.log('PrefetchServiceWorker.onMessage', id, assets);\n\tif (!id) {\n\t\treturn;\n\t}\n\tif (id && !assets) {\n\t\tconst controller = controllers[id];\n\t\tif (controller) {\n\t\t\t// console.log('PrefetchServiceWorker.Aborting', id);\n\t\t\tcontroller.abort();\n\t\t}\n\t\treturn;\n\t}\n\tif (!assets.length) {\n\t\treturn;\n\t}\n\tif (typeof Promise === 'undefined') {\n\t\treturn;\n\t}\n\tif (typeof fetch !== 'function') {\n\t\treturn;\n\t}\n\tconst options = {\n\t\tmode: 'cors', // no-cors, *cors, same-origin\n\t};\n\tif (self.AbortController) {\n\t\tconst controller = new AbortController();\n\t\toptions.signal = controller.signal;\n\t\tcontrollers[id] = controller;\n\t\t// console.log('AbortController', id);\n\t}\n\treturn PromiseAllProgress(assets.map(url => Prefetch(url, options)), function(progress) {\n\t\t// console.log('PrefetchServiceWorker.onMessage.Progress', progress);\n\t\tsendMessage(PrefetchServiceWorkerEvent.Progress, assets, progress);\n\t}).then(function(_) {\n\t\tdelete controllers[id];\n\t\t// console.log('PrefetchServiceWorker.onMessage.Complete', assets);\n\t\tsendMessage(PrefetchServiceWorkerEvent.Complete, assets);\n\t}).catch(function(error) {\n\t\tconsole.log('PrefetchServiceWorker.onMessage.error', error);\n\t});\n}\n\nself.addEventListener('message', onMessage);\n\nfunction Prefetch(url, options) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst resolved = prefetched[url];\n\t\tif (resolved) {\n\t\t\tresolve(url);\n\t\t} else {\n\t\t\tfetch(url, options).then(function(_) {\n\t\t\t\tprefetched[url] = true;\n\t\t\t\tresolve(url);\n\t\t\t}, function(error) {\n\t\t\t\t// console.log('PrefetchServiceWorker.Prefetch.error', error);\n\t\t\t\treject(error);\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction PromiseAllProgress(promises, onProgress) {\n\tconst total = promises.length;\n\tlet loaded = 0;\n\tif (typeof onProgress === 'function') {\n\t\tonProgress({ loaded, total });\n\t}\n\tfor (const promise of promises) {\n\t\tpromise.then(() => {\n\t\t\tloaded++;\n\t\t\tif (typeof onProgress === 'function') {\n\t\t\t\tonProgress({ loaded, total });\n\t\t\t}\n\t\t});\n\t}\n\treturn Promise.all(promises);\n}\n"]}